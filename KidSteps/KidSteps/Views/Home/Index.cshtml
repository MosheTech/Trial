@model KidSteps.ViewModels.HomeIndexViewModel
@{
    ViewBag.Title = "Home Page";
}
<h2>@ViewBag.Message</h2>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
@if (!Model.IsLoggedOn)
{
    @Html.ValidationSummary(true, "Login was unsuccessful. Please correct the errors and try again.")
    using (Html.BeginForm())
    {
    <div>
        <fieldset>
            <legend>Sign In</legend>
            <div class="editor-label">
                @Html.LabelFor(m => m.LogOnModel.Email)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.LogOnModel.Email)
                @Html.ValidationMessageFor(m => m.LogOnModel.Email)
            </div>
            <div class="editor-label">
                @Html.LabelFor(m => m.LogOnModel.Password)
            </div>
            <div class="editor-field">
                @Html.PasswordFor(m => m.LogOnModel.Password)
                @Html.ValidationMessageFor(m => m.LogOnModel.Password)
            </div>
            <div class="editor-label">
                @Html.CheckBoxFor(m => m.LogOnModel.RememberMe)
                @Html.LabelFor(m => m.LogOnModel.RememberMe)
            </div>
            <p>
                <input type="submit" value="Log On" />
            </p>
        </fieldset>
    </div>
    }
    
    <div>
        Don't have an account yet? <strong>@Html.ActionLink("Sign  up", MVC.Account.Register())</strong>
        to start recording your Kid Steps today!
    </div>
}
else
{
    if (Model.UserDefaultFamily == null)
    {
    <div>
        You aren't part of a family yet.</div>
    <div>
        Start a family!</div>
    }
    else
    {
    <div>
        <strong>@Model.UserDefaultFamily.Name Family</strong></div>
    <p />
    <table>
        <tr>
            <td>
                Kids: @Model.FamilyMembers.Count(fm => fm.Relationship == KidSteps.Models.RelationshipType.Self)
            </td>
            <td>@Html.ActionLink("Add a kid", "CreateKid", "User")
            </td>
        </tr>
        <tr>
            <td>
                Registered Family Members: @Model.FamilyMembers.Count(fm => fm.User.HasAccount)
            </td>
            <td>@Html.ActionLink("Add a family member", MVC.Family.CreateFamilyMember().WithId(Model.UserDefaultFamily))
            </td>
        </tr>
        <tr>
            <td>
                Unregistered Members: @(Model.FamilyMembers.Count(fm => !fm.User.HasAccount) - 1)
            </td>
            <td>@Html.ActionLink("Invite", MVC.Invitation.Index())
            </td>
        </tr>
    </table>
            
            
    }
}
